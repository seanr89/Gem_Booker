# This workflow builds a Flutter web application.

name: Flutter Web Build

on:
  push:
    branches:
      - main # Trigger the workflow on pushes to the main branch
  pull_request:
    branches:
      - main # Trigger the workflow on pull requests to the main branch

jobs:
  build:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: 1. Checkout Repository
        uses: actions/checkout@v4 # Action to check out your repository code

      - name: 2. Set up Flutter SDK
        uses: subosito/flutter-action@v2 # Action to set up Flutter environment
        with:
          flutter-version: '3.x' # Specify the Flutter version (e.g., '3.x', '3.19.x', or a specific version like '3.19.6')
          channel: 'stable' # Use the stable channel

      - name: 3. Enable Flutter Web Support
        run: flutter config --enable-web # Command to enable web support for Flutter

      - name: 4. Get Flutter Dependencies
        run: flutter pub get # Command to fetch all package dependencies

      - name: 5. Build Flutter Web Application
        working-directory: ./flutter_nav # Set the working directory to the root of the repository
        run: flutter build web --release # Command to build the web application in release mode

      # Optional: You can add steps here to deploy your built web app
      # For example, to GitHub Pages, an S3 bucket, or another hosting service.
      # Example for GitHub Pages (requires a separate action like peaceiris/actions-gh-pages):
      # - name: Deploy to GitHub Pages
      #   uses: peaceiris/actions-gh-pages@v3
      #   if: github.ref == 'refs/heads/main' # Only deploy from main branch
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     publish_dir: ./build/web # Directory where the web build output is located
      #     cname: your-custom-domain.com # Optional: if you have a custom domain
